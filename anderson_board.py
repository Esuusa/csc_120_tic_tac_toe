# -*- coding: utf-8 -*-
"""anderson_board_inc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MhNHZj_wjsl6ySMObEgQ7sspBnXq8nqK
"""

board = [['_', '_', '_'], ['_', '_', '_'], ['_', '_', '_']]  # this list contains 3 lists, each of 3 elements, each element being a single character

def print_board():
  print(board[0])
  print(board[1])
  print(board[2])

def check_mark(row, col):
  if not(0 < row < 2) or not(0 < col < 2):
  #if row > 2 or row < 0 or col > 2 or col < 0:
    return False
  elif not(board[row][col] == '_'):
    return False
  else:
    return True

def place_mark(row, col, player_id):
  if player_id == 1:
    board[row][col] = 'X'
  if player_id ==2:
    board[row][col] = 'O'

def check_win(player_id):
  if board[0][0] == board[0][1] == board[0][2] == player_id:
    return True
  elif board[1][0] == board[1][1] == board[1][2] == player_id:
    return True
  elif board[2][0] == board[2][1] == board[2][2] == player_id:
    return True
  elif board[0][0] == board[1][0] == board[2][0] == player_id:
    return True
  elif board[0][1] == board[1][1] == board[2][1] == player_id:
    return True
  elif board[0][2] == board[1][2] == board[2][2] == player_id:
    return True
  elif board[0][0] == board[1][1] == board[2][2] == player_id:
    return True
  elif board[0][2] == board[1][1] == board[2][0] == player_id:
    return True
  else:
    return False

def main():
  # testing print_board()
  print('Testing print board')
  print_board()

  # testing check_mark() 1
  print('\ntesting check mark out of bounds 1: (0, 3)')
  print(check_mark(0, 3))
  print('testing check mark out of bounds 2: (-1, 0)')
  print(check_mark(-1, 0))
  print('testing check mark out of bounds 3: (1, 1)')
  print(check_mark(1, 1))

  # testing place_mark()
  print('\ntesting place mark 1: (1, 1, 1)')
  place_mark(1, 1, 1)
  print_board()
  print('testing place mark 2: (2, 0, 2)')
  place_mark(2, 0, 2)
  print_board()

   # testing check_mark() 2
  print('\ntesting check mark taken 1: (1, 1)')
  print(check_mark(0, 3))
  print('testing check mark out taken 2: (2, 0)')
  print(check_mark(-1, 0))

  # testing check_win()
  print('\ntesting check win 1: X doesn\'t win')
  print(check_win('X'))
  print('testing check win 2: O doesn\'t win')
  print(check_win('O'))
  print('testing check win 3: X wins')
  place_mark(1, 0, 1)
  place_mark(1, 2, 1)
  print(check_win('X'))
  print_board()
  print('testing check win 4: O wins')
  place_mark(1, 1, 2)
  place_mark(0, 2, 2)
  print(check_win('O'))
  print_board()



main()