# -*- coding: utf-8 -*-
"""anderson_board_stage_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17gxizlNUdQhID1Bot4JNVL3sZEhEASK6
"""

board = [['_', '_', '_'], ['_', '_', '_'], ['_', '_', '_']]  # this list contains 3 lists, each of 3 elements, each element being a single character

def print_board(): # prints board
  print('\n')
  print(board[0])
  print(board[1])
  print(board[2])

def check_mark(row, col):
  if not(0 <= row <= 2) or not(0 <= col <= 2):   #checks if numbers are in range
    return False
  elif not(board[row][col] == '_'):   # checks if space is taken
    return False
  else:
    return True

def place_mark(row, col, player_id):   # places mark in desired space
  if player_id == 1:
    board[row][col] = 'X'
  if player_id ==2:
    board[row][col] = 'O'

def check_win(player_id): 
  # changes player id number to player letter  
  if player_id == 1:
    player_letter = 'X'
  elif player_id == 2:
    player_letter = 'O'
  # goes through win scenarios and compares with current board
  if board[0][0] == board[0][1] == board[0][2] == player_letter:
    return True
  elif board[1][0] == board[1][1] == board[1][2] == player_letter:
    return True
  elif board[2][0] == board[2][1] == board[2][2] == player_letter:
    return True
  elif board[0][0] == board[1][0] == board[2][0] == player_letter:
    return True
  elif board[0][1] == board[1][1] == board[2][1] == player_letter:
    return True
  elif board[0][2] == board[1][2] == board[2][2] == player_letter:
    return True
  elif board[0][0] == board[1][1] == board[2][2] == player_letter:
    return True
  elif board[0][2] == board[1][1] == board[2][0] == player_letter:
    return True
  else:
    return False

def main():
  # determines which player's turn it is and prints board
  for turn in range(9):
    if turn % 2 == 0:
      player_id = 1
    elif turn % 2 == 1:
        player_id = 2
    print_board()
    # asks player for their mark's row and column number
    row = int(input('\nPlayer ' + str(player_id) + ', enter which row you would like to place your mark: '))
    col = int(input('Player ' + str(player_id) + ', enter which column you would like to place your mark: '))
    # checks if input is valid, loops until input is valid
    mark_valid = check_mark(row, col)
    while mark_valid == False:
      print('Please enter a valid row and/or column number.')
      row = int(input('\nPlayer ' + str(player_id) + ', enter which row you would like to place your mark: '))
      col = int(input('Player ' + str(player_id) + ', enter which column you would like to place your mark: '))
      mark_valid = check_mark(row, col)
    # places mark
    place_mark(row, col, player_id)
      
# runs main
main()